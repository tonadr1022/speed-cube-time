services:
  speed-cube-time:
    depends_on:
      - roach
    build:
      context: .
      dockerfile: cmd/server/Dockerfile.dev
    volumes:
      - .:/opt/app/api
    container_name: speed-cube-time-rest-server
    hostname: speed-cube-time-rest-server
    networks:
      localnet:
        aliases:
          - db
    ports:
      - 80:8080
    environment:
      - APP_DSN=cockroach://username:roach@db:26257/speed_cube_time?sslmode=disable
      - PGHOST=db
      - PGPORT=26257
      - PGUSER=username
      - PGPASSWORD=roach
      - PGDATABASE=speed_cube_time
      - HTTP_PORT=8080
      - JWT_SECRET=Dn84hN+gnUHaBY1ZPFvlr8EKu3pZEhfYtMMo7xUkdO0=
      - TOKEN_EXPIRATION_MINUTES=4320

    deploy:
      restart_policy:
        condition: on-failure
  roach:
    image: cockroachdb/cockroach:latest-v23.2
    container_name: roach
    hostname: db
    networks:
      - localnet
    expose:
      - 8080
      - 26257
    ports:
      - 26257:26257
      - 8080:8080
    volumes:
      - roach:/cockroach/cockroach-data
    command: start-single-node --insecure
  migrate: &basemigrate
    container_name: migrate
    profiles: ["tools"]
    networks:
      - localnet
    image: migrate/migrate
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "cockroach://username:roach@db:26257/speed_cube_time?sslmode=disable",
      ]
    command: up
    links:
      - roach
    volumes:
      - ./migrations:/migrations
  migrate-create:
    <<: *basemigrate
    entrypoint: migrate create -dir /migrations -ext sql
    command: ""
  database-reset:
    <<: *basemigrate
    command: ["drop", "-f"]
volumes:
  roach:

networks:
  localnet:
    driver: bridge
